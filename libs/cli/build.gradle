/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'opensearch.build'
apply plugin: 'nebula.optional-base'
apply plugin: 'opensearch.publish'

java {
  modularity.inferModulePath.set(false)
}
apply plugin: 'org.javamodularity.moduleplugin'
configurations {
  modulePath {
    transitive false
  }
}
dependencies {
  //api 'net.sf.jopt-simple:jopt-simple:5.0.2'
  //api project(':libs:opensearch-core')
  api project(':libs:opensearch-core')
  api 'net.sf.jopt-simple:jopt-simple:5.0.2'
}
compileJava.doFirst {
  //options.compilerArgs -= ['--module-path', project.configurations.compileClasspath.asPath]
  options.compilerArgs += [
    //'-Xmaxerrs', '10',
    '-Xmaxwarns', '1',
    '-cp', project.configurations.compileClasspath.asPath,
    '--add-modules', 'ALL-SYSTEM',
    '--module-path', configurations.modulePath.asPath,
    //'--patch-module',"opensearch.common=opensearch-x-content-2.0.0-SNAPSHOT.jar",
    '--add-reads', "opensearch.cli=ALL-UNNAMED"
  ]

  //forbiddenApisJava11Test.enabled = false
  //println sourceSets.java11Test.compileClasspath.asPath
  println compileJava.options.compilerArgs
}
javadoc.enabled = false
test.enabled = false
// Since CLI does not depend on :server, it cannot run the jarHell task
jarHell.enabled = false

tasks.named('forbiddenApisMain').configure {
  replaceSignatureFiles 'jdk-signatures'
}
